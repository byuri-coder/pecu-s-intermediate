rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(resource) {
      return isAuthenticated() && request.auth.uid == resource.data.ownerId;
    }

    // Rules for carbon-credits collection
    match /carbon-credits/{creditId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource);
    }
    
    // Rules for tax-credits collection
    match /tax-credits/{creditId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource);
    }
    
    // Rules for rural-lands collection
    match /rural-lands/{landId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isOwner(resource);
    }

    // You can add more specific rules for other collections here.
    // For example, user profiles might have different read/write access.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }
  }
}
